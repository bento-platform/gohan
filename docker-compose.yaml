version: '2.4'

services:
  # ingress:
  #   build:
  #     context: $PWD/lib/ingress
  #     args:
  #       BASE_IMAGE: ${BENTOV2_INGRESS_BASE_IMAGE}
  #       BASE_IMAGE_VERSION: ${BENTOV2_INGRESS_BASE_IMAGE_VERSION}
  #   image: ${BENTOV2_INGRESS_IMAGE}:${BENTOV2_INGRESS_VERSION}
  #   container_name: ${BENTOV2_INGRESS_CONTAINER_NAME}
  #   networks: 
  #     bridge-net:
  #       aliases:
  #         - bentov2.local
  #         - bentov2auth.local
  #   ports:
  #     - "80:80"
  #     - "443:443"


  api:
    build:
      context: $PWD/Bento.Variants.Api
      args:
        BASE_IMAGE: alpine #mcr.microsoft.com/dotnet/aspnet:3.1.12-alpine3.12
        SRC_DIR: ./bin/ReleaseAlpine/netcoreapp3.1/linux-musl-x64/publish 
    image: variants-api:latest
    container_name: variants-api
    environment:
      # Elasticsearch
      - ElasticSearch__PrimaryIndex=variants
      - ElasticSearch__Protocol=http
      - ElasticSearch__Host=elasticsearch
      - ElasticSearch__Port=9200
      # .NET
      - DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=1 # optimized alpine linux container needs this
      - DOTNET_CLI_TELEMETRY_OPTOUT=1
    ports:
      - 5000:5000
    networks:
      - bridge-net


  elasticsearch:
    image: elasticsearch:7.10.1
    mem_limit: 14GB # for mem_limit to work, make sure docker-compose is v2.4
    cpuset: 0-5 # grant access to all cores
    container_name: elasticsearch
    ports:
      - 9200:9200
      - 9300:9300
    networks: 
      - bridge-net
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms13g -Xmx13g" # allocate a little bit less memory than what is stated in `mem_limit` ^^
    volumes: 
      - ./data/elasticsearch:/usr/share/elasticsearch/data

  kibana:
    image: kibana:7.10.1
    container_name: kibana
    networks: 
      - bridge-net
    environment:
      - ELASTICSEARCH_URL=elasticsearch:9200
    ports: 
      - 5601:5601

networks: 
  bridge-net:
    external: true