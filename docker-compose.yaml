version: '2.4'

services:
  gateway:
    build:
      context: $PWD/gateway
      args:
        BASE_IMAGE: ${BENTO_VARIANTS_GATEWAY_BASE_IMAGE}
        BASE_IMAGE_VERSION: ${BENTO_VARIANTS_GATEWAY_BASE_IMAGE_VERSION}
        DRS_BASIC_AUTH_FILE_PATH: ${BENTO_VARIANTS_DRS_BASIC_AUTH_FILE_PATH}
    image: ${BENTO_VARIANTS_GATEWAY_IMAGE}:${BENTO_VARIANTS_GATEWAY_VERSION}
    container_name: ${BENTO_VARIANTS_GATEWAY_CONTAINER_NAME}
    networks: 
      - bridge-net
    ports:
      - "80:80"
      - "443:443"

  # DUPLICATES - almost
  api:
    build:
      context: $PWD/Bento.Variants.Api
      args:
        BASE_IMAGE: ${BENTO_VARIANTS_API_BASE_IMAGE}
        SRC_DIR: ${BENTO_VARIANTS_API_SRC_DIR}
        INTERNAL_PORT: ${BENTO_VARIANTS_API_INTERNAL_PORT}
    image: ${BENTO_VARIANTS_API_IMAGE}:${BENTO_VARIANTS_API_VERSION}
    container_name: ${BENTO_VARIANTS_API_CONTAINER_NAME}
    # using default ports interally only.
    # ports:
    #   - ${BENTO_VARIANTS_API_EXTERNAL_PORT}:${BENTO_VARIANTS_API_INTERNAL_PORT}
    networks:
      - bridge-net
    environment:
      # Elasticsearch
      - ElasticSearch__Username=${BENTO_VARIANTS_ES_USERNAME}
      - ElasticSearch__Password=${BENTO_VARIANTS_ES_PASSWORD}

      - ElasticSearch__GatewayPath=${BENTO_VARIANTS_ES_GATEWAY_PATH}

      - ElasticSearch__PrimaryIndex=${BENTO_VARIANTS_API_ES_PI}
      - ElasticSearch__Protocol=${BENTO_VARIANTS_API_ES_PROTO}
      - ElasticSearch__Host=${BENTO_VARIANTS_API_ES_HOST}
      - ElasticSearch__Port=${BENTO_VARIANTS_API_ES_PORT}

      # .NET
      - DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=1 # optimized alpine linux container needs this
      - DOTNET_CLI_TELEMETRY_OPTOUT=1

  # DUPLICATES - almost
  api-alpine:
    build:
      context: $PWD/Bento.Variants.Api
      args:
        BASE_IMAGE: ${BENTO_VARIANTS_API_ALPINE_BASE_IMAGE}
        SRC_DIR: ${BENTO_VARIANTS_API_ALPINE_SRC_DIR}
        INTERNAL_PORT: ${BENTO_VARIANTS_API_INTERNAL_PORT}
        IS_ALPINE: "true"
    image: ${BENTO_VARIANTS_API_IMAGE}:${BENTO_VARIANTS_API_VERSION}
    container_name: ${BENTO_VARIANTS_API_CONTAINER_NAME}
    # using default ports interally only.
    # ports:
    #   - ${BENTO_VARIANTS_API_EXTERNAL_PORT}:${BENTO_VARIANTS_API_INTERNAL_PORT}
    networks:
      - bridge-net
    environment:
      # Elasticsearch
      - ElasticSearch__Username=${BENTO_VARIANTS_ES_USERNAME}
      - ElasticSearch__Password=${BENTO_VARIANTS_ES_PASSWORD}

      - ElasticSearch__GatewayPath=${BENTO_VARIANTS_ES_GATEWAY_PATH}

      - ElasticSearch__PrimaryIndex=${BENTO_VARIANTS_API_ES_PI}
      - ElasticSearch__Protocol=${BENTO_VARIANTS_API_ES_PROTO}
      - ElasticSearch__Host=${BENTO_VARIANTS_API_ES_HOST}
      - ElasticSearch__Port=${BENTO_VARIANTS_API_ES_PORT}

      # .NET
      - DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=1 # optimized alpine linux container needs this
      - DOTNET_CLI_TELEMETRY_OPTOUT=1
  ####

  elasticsearch:
    image: ${BENTO_VARIANTS_ES_BASE_IMAGE}:${BENTO_VARIANTS_ES_BASE_VERSION}
    mem_limit: ${BENTO_VARIANTS_ES_MEM_LIM} # for mem_limit to work, make sure docker-compose is v2.4
    cpuset: ${BENTO_VARIANTS_ES_CPUSET} # grant access to all cores
    container_name: ${BENTO_VARIANTS_ES_CONTAINER_NAME}

    # using default ports interally only.
    # default configuration is consistent with these (see example.env).
    #ports:
      # - ${BENTO_VARIANTS_ES_EXTERNAL_PORT_1}:${BENTO_VARIANTS_ES_INTERNAL_PORT_1}
      # - ${BENTO_VARIANTS_ES_EXTERNAL_PORT_2}:${BENTO_VARIANTS_ES_INTERNAL_PORT_2}
      # - ${BENTO_VARIANTS_ES_INTERNAL_PORT_1}
      # - ${BENTO_VARIANTS_ES_INTERNAL_PORT_2}
      
    networks: 
      - bridge-net
    environment:
      - ELASTIC_USERNAME=${BENTO_VARIANTS_ES_USERNAME}
      - ELASTIC_PASSWORD=${BENTO_VARIANTS_ES_PASSWORD}
      - ${BENTO_VARIANTS_ES_JAVA_OPTS}
      - xpack.security.enabled=true
      - discovery.type=${BENTO_VARIANTS_ES_DISC_TYP}
    volumes: 
      - ${BENTO_VARIANTS_ES_DATA_DIR}:/usr/share/elasticsearch/data

  kibana:
    image: ${BENTO_VARIANTS_KB_BASE_IMAGE}:${BENTO_VARIANTS_KB_BASE_VERSION}
    container_name: ${BENTO_VARIANTS_KB_CONTAINER_NAME}
    networks: 
      - bridge-net
    environment:
      - ELASTICSEARCH_URL=${BENTO_VARIANTS_KB_ES_HOST}:${BENTO_VARIANTS_KB_ES_PORT}
    # using default ports interally only.
    # ports: 
    #   - ${BENTO_VARIANTS_KB_EXTERNAL_PORT}:${BENTO_VARIANTS_KB_INTERNAL_PORT}

  drs:
    build:
      context: $PWD/drs
      args:
        BASE_IMAGE: ${BENTO_VARIANTS_DRS_BASE_IMAGE}
        BASE_IMAGE_VERSION: ${BENTO_VARIANTS_DRS_BASE_IMAGE_VERSION}
        REPO: ${BENTO_VARIANTS_DRS_REPO}
        BRANCH: ${BENTO_VARIANTS_DRS_BRANCH}
        TAG: ${BENTO_VARIANTS_DRS_TAG}
    image: ${BENTO_VARIANTS_DRS_IMAGE}:${BENTO_VARIANTS_DRS_VERSION}
    container_name: ${BENTO_VARIANTS_DRS_CONTAINER_NAME}
    environment: 
      # Runtime
      - FLASK_DEBUG=False
      - FLASK_APP=app
      - DATABASE=/drs/chord_drs/data/db/  # slightly confused naming, folder for database to go in
      - DATA=/drs/chord_drs/data/obj/  # DRS file objects, vs. the database
    networks: 
      - bridge-net
    # using default ports interally only.
    # ports:
    #    - "${BENTO_VARIANTS_DRS_EXTERNAL_PORT}:${BENTO_VARIANTS_DRS_INTERNAL_PORT}"
    volumes:
      - ${BENTO_VARIANTS_DRS_DATA_DIR}:/drs/chord_drs/data


  authorization:
    build:
      context: $PWD/authorization
      args: 
        - BASE_IMAGE=${BENTO_VARIANTS_AUTHZ_OPA_BASE_IMAGE}:${BENTO_VARIANTS_AUTHZ_OPA_BASE_IMAGE_VERSION}
    image: ${BENTO_VARIANTS_AUTHZ_OPA_IMAGE}:${BENTO_VARIANTS_AUTHZ_OPA_IMAGE_VERSION}
    container_name: ${BENTO_VARIANTS_AUTHZ_OPA_CONTAINER_NAME}
    networks:
      - bridge-net
    # using default ports interally only.
    # ports:
    #   - "${BENTO_VARIANTS_AUTHZ_OPA_EXTERNAL_PORT}:${BENTO_VARIANTS_AUTHZ_OPA_INTERNAL_PORT}"
    command:
      - "run"
      - "--server"
      - "--log-level=debug"
      - "/api.policy.rego"


networks: 
  bridge-net:
    external: true