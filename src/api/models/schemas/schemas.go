package schemas

import (
	c "api/models/constants"
	so "api/models/constants/search"
)

type Schema map[string]interface{}

var VARIANT_TABLE_METADATA_SCHEMA Schema = map[string]interface{}{
	"$id":         "variant:table_metadata", // TODO: Real ID
	"$schema":     "http://json-schema.org/draft-07/schema#",
	"description": "Bento variant data type metadata schema",
	"type":        "object",
	"required":    []string{},
	"properties": map[string]interface{}{
		"created": map[string]interface{}{
			"type":                "string",
			"chord_autogenerated": true, // TODO: Extend schema
		},
		"updated": map[string]interface{}{
			"type":                "string",
			"chord_autogenerated": true, // TODO: Extend schema
		},
	},
}

var VARIANT_SCHEMA Schema = map[string]interface{}{
	"$id":         "variant:variant", // TODO: Real ID
	"$schema":     "http://json-schema.org/draft-07/schema#",
	"description": "Bento variant data type",
	"type":        "object",
	"required":    []string{"assembly_id", "chromosome", "start", "end", "ref", "alt", "calls"},
	"search": map[string]interface{}{
		"operations": []c.SearchOperation{},
	},
	"properties": map[string]interface{}{
		"calls": map[string]interface{}{
			"type":        "array",
			"description": "Called instances of this variant on samples.",
			"items":       VARIANT_CALL_SCHEMA,
			"search": map[string]interface{}{
				"required": false,
				"type":     "unlimited",
				"order":    7,
			},
		},
	},
}

var VARIANT_CALL_SCHEMA Schema = map[string]interface{}{
	"id":          "variant:variant_call", // TODO: Real ID
	"type":        "object",
	"description": "An object representing a called instance of a variant.",
	"required":    []string{"sample_id", "genotype_bases"},
	"properties": map[string]interface{}{
		"sample_id": map[string]interface{}{
			"type":        "string",
			"description": "Variant call sample ID.", // TODO: More detailed?
			"search": map[string]interface{}{
				"operations": []c.SearchOperation{so.SEARCH_OP_EQ},
				"queryable":  "internal",
				"canNegate":  true,
				"required":   false,
				"type":       "single",
				"order":      0,
			},
		},
	},
}
