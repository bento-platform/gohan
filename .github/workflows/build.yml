name: Build and push gohan

on:
  release:
    types: [ published ]
  pull_request:
    branches:
      - master
  push:
    branches:
      - "ci-image-builds" # temp

  workflow_dispatch:
    branches:
      - "**" # temp

jobs:
  build-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into the container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}


      - name: Set up production image metadata
        id: meta
        uses: docker/metadata-action@v4
        # if: ${{ github.event_name == 'release' }}
        with:
          images: |
            ghcr.io/bento-platform/gohan-api
          flavor: |
            latest=true
          tags: |
            type=semver,pattern=test
            type=semver,pattern=0.0

      - name: Gather default environment variables
        id: envx
        run: |
          cp ./etc/example.env .env
          source .env
          echo "GOHAN_API_BUILDER_BASE_IMAGE=$GOHAN_API_BUILDER_BASE_IMAGE" >> $GITHUB_ENV
          echo "GOHAN_API_BASE_IMAGE=$GOHAN_API_BASE_IMAGE" >> $GITHUB_ENV

      - name: Load environment variables from .env file
        uses: xom9ikk/dotenv@v2
      
      - name: Build and push production image
        uses: docker/build-push-action@v3
        # if: ${{ github.event_name == 'release' }}
        with:
          context: "{{defaultContext}}:src/api"
          file: Dockerfile
          build-args: |
            BUILDER_BASE_IMAGE=${{ env.GOHAN_API_BUILDER_BASE_IMAGE }}
            BASE_IMAGE=${{ env.GOHAN_API_BASE_IMAGE }}
          push: true
          tags: test-0.0
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64